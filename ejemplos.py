import lib
import math
from grafoPeso import grafoPeso
from grafoDir import grafoDir


graph=grafoPeso({})
graph.AgregarVertice('A')
graph.AgregarVertice('B')
graph.AgregarVertice('C')
graph.AgregarVertice('D')
graph.AgregarVertice('E')
graph.AgregarVertice('F')
graph.AgregarVertice('G')
graph.AgregarVertice('H')
graph.AgregarVertice('I')
graph.AgregarVertice('J')
graph.AgregarVertice('K')
graph.AgregarVertice('L')
graph.AgregarVertice('M')
'''graph.AgregarArista(('A','B',1))
graph.AgregarArista(('B','C',4))
graph.AgregarArista(('A','D',2))
graph.AgregarArista(('B','D',3))
graph.AgregarArista(('D','C',2))
graph.AgregarArista(('C','E',2))
graph.AgregarArista(('E','D',703))
graph.AgregarArista(('E','B',7))'''
graph.AgregarArista(('A','B',1))
graph.AgregarArista(('A','C',2))
graph.AgregarArista(('A','D',4))
graph.AgregarArista(('A','E',3))
graph.AgregarArista(('A','F',1))
graph.AgregarArista(('A','G',2))
graph.AgregarArista(('A','H',4))
graph.AgregarArista(('A','I',3))
graph.AgregarArista(('A','J',1))
graph.AgregarArista(('A','K',2))
graph.AgregarArista(('A','L',4))
graph.AgregarArista(('A','M',3))
graph.AgregarArista(('B','C',23))
graph.AgregarArista(('B','D',5))
graph.AgregarArista(('B','E',1))
graph.AgregarArista(('B','F',5))
graph.AgregarArista(('B','G',5))
graph.AgregarArista(('B','H',1))
graph.AgregarArista(('B','I',2))
graph.AgregarArista(('B','J',5))
graph.AgregarArista(('B','K',1))
graph.AgregarArista(('B','L',2))
graph.AgregarArista(('B','M',5))
graph.AgregarArista(('C','D',4))
graph.AgregarArista(('C','E',2))
graph.AgregarArista(('C','F',3))
graph.AgregarArista(('C','G',5))
graph.AgregarArista(('C','H',3))
graph.AgregarArista(('C','I',2))
graph.AgregarArista(('C','J',3))
graph.AgregarArista(('C','K',10))
graph.AgregarArista(('C','L',3))
graph.AgregarArista(('C','M',2))
graph.AgregarArista(('D','E',2))
graph.AgregarArista(('D','F',4))
graph.AgregarArista(('D','G',6))
graph.AgregarArista(('D','H',4))
graph.AgregarArista(('D','I',2))
graph.AgregarArista(('D','J',703))
graph.AgregarArista(('D','K',12))
graph.AgregarArista(('D','L',3))
graph.AgregarArista(('D','M',21))
graph.AgregarArista(('E','F',2))
graph.AgregarArista(('E','G',2))
graph.AgregarArista(('E','H',2))
graph.AgregarArista(('E','I',2))
graph.AgregarArista(('E','G',2))
graph.AgregarArista(('E','K',2))
graph.AgregarArista(('E','L',2))
graph.AgregarArista(('E','M',2))
graph.AgregarArista(('F','G',43))
graph.AgregarArista(('F','H',45))
graph.AgregarArista(('F','I',12))
graph.AgregarArista(('F','J',3))
graph.AgregarArista(('F','K',2))
graph.AgregarArista(('F','L',703))
graph.AgregarArista(('F','M',1))
graph.AgregarArista(('G','H',7))
graph.AgregarArista(('G','I',7))
graph.AgregarArista(('G','J',703))
graph.AgregarArista(('G','K',7))
graph.AgregarArista(('G','L',73))
graph.AgregarArista(('G','M',5))
graph.AgregarArista(('H','I',6))
graph.AgregarArista(('H','J',7))
graph.AgregarArista(('H','K',2))
graph.AgregarArista(('H','L',1))
graph.AgregarArista(('H','M',5))
graph.AgregarArista(('I','J',6))
graph.AgregarArista(('I','K',4))
graph.AgregarArista(('I','L',6))
graph.AgregarArista(('I','M',7))
graph.AgregarArista(('J','K',8))
graph.AgregarArista(('J','L',8))
graph.AgregarArista(('J','M',1))
graph.AgregarArista(('K','L',31))
graph.AgregarArista(('K','M',7))
graph.AgregarArista(('L','M',1))

print('grafo pesado')
print(graph.dic)
print('\n')
'''print('viajante')
print(lib.viajante(graph,'H'))
print('\n')'''
print('camino minimo')
print(lib.camino_minimo(graph,'H','M'))
print('\n')
print('arbol tendido minimo')
arbol = lib.arbol_tendido_minimo(graph)
print(arbol.dic)
print('\n')
print('viajante aproximado')
print(lib.viajante_aproximado(graph,'H'))
print('\n')

graph2=grafoPeso({})
graph2.AgregarVertice('A')
graph2.AgregarVertice('B')
graph2.AgregarVertice('J')
graph2.AgregarVertice('F')
graph2.AgregarArista(('A','B',8))
graph2.AgregarArista(('A','J',15))
graph2.AgregarArista(('A','F',4))
graph2.AgregarArista(('B','J',9))
graph2.AgregarArista(('B','F',7))
graph2.AgregarArista(('J','F',10))

print('viajante 2')
print(lib.viajante(graph2,'J'))
print('\n')

graph3=grafoPeso({})
graph3.AgregarVertice('A')
graph3.AgregarVertice('B')
graph3.AgregarVertice('C')
graph3.AgregarVertice('D')
graph3.AgregarVertice('E')
graph3.AgregarArista(('A','B',7))
graph3.AgregarArista(('A','C',6))
graph3.AgregarArista(('A','D',8))
graph3.AgregarArista(('A','E',4))
graph3.AgregarArista(('B','C',8))
graph3.AgregarArista(('B','D',5))
graph3.AgregarArista(('B','E',6))
graph3.AgregarArista(('C','D',9))
graph3.AgregarArista(('C','E',7))
graph3.AgregarArista(('D','E',8))

print('viajante 3')
print(lib.viajante(graph3,'D'))
print('\n')

graph4=grafoPeso({})
graph4.AgregarVertice('C')
graph4.AgregarVertice('D')
graph4.AgregarVertice('E')
graph4.AgregarArista(('C','D',9))
graph4.AgregarArista(('C','E',7))
graph4.AgregarArista(('D','E',8))
print('viajante 4')
#caminos = [[]* math.factorial(len(graph3.dic))] 
print(lib.viajante(graph4,'E'))
print('\n')

graph5=grafoPeso({})
graph5.AgregarVertice('H')
graph5.AgregarVertice('I')
graph5.AgregarVertice('J')
graph5.AgregarVertice('K')
graph5.AgregarVertice('L')
graph5.AgregarVertice('M')
graph5.AgregarArista(('H','I',6))
graph5.AgregarArista(('H','J',7))
graph5.AgregarArista(('H','K',2))
graph5.AgregarArista(('H','L',1))
graph5.AgregarArista(('H','M',5))
graph5.AgregarArista(('I','J',6))
graph5.AgregarArista(('I','K',4))
graph5.AgregarArista(('I','L',6))
graph5.AgregarArista(('I','M',7))
graph5.AgregarArista(('J','K',8))
graph5.AgregarArista(('J','L',8))
graph5.AgregarArista(('J','M',1))
graph5.AgregarArista(('K','L',31))
graph5.AgregarArista(('K','M',7))
graph5.AgregarArista(('L','M',1))
print('viajante 5')
print(lib.viajante(graph5,'J'))
print('\n')

graph6=grafoPeso({})
graph6.AgregarVertice('G')
graph6.AgregarVertice('H')
graph6.AgregarVertice('I')
graph6.AgregarVertice('J')
graph6.AgregarVertice('K')
graph6.AgregarVertice('L')
graph6.AgregarVertice('M')
graph6.AgregarArista(('G','H',7))
graph6.AgregarArista(('G','I',7))
graph6.AgregarArista(('G','J',703))
graph6.AgregarArista(('G','K',7))
graph6.AgregarArista(('G','L',73))
graph6.AgregarArista(('G','M',5))
graph6.AgregarArista(('H','I',6))
graph6.AgregarArista(('H','J',7))
graph6.AgregarArista(('H','K',2))
graph6.AgregarArista(('H','L',1))
graph6.AgregarArista(('H','M',5))
graph6.AgregarArista(('I','J',6))
graph6.AgregarArista(('I','K',4))
graph6.AgregarArista(('I','L',6))
graph6.AgregarArista(('I','M',7))
graph6.AgregarArista(('J','K',8))
graph6.AgregarArista(('J','L',8))
graph6.AgregarArista(('J','M',1))
graph6.AgregarArista(('K','L',31))
graph6.AgregarArista(('K','M',7))
graph6.AgregarArista(('L','M',1))
print('viajante 6')
print(lib.viajante(graph6,'J'))
print('\n')

graph2=grafoDir({})
graph2.AgregarVertice('A')
graph2.AgregarVertice('B')
graph2.AgregarVertice('C')
graph2.AgregarVertice('D')
graph2.AgregarVertice('E')
graph2.AgregarArista(('A','B'))
graph2.AgregarArista(('A','C'))
graph2.AgregarArista(('A','D'))
graph2.AgregarArista(('A','E'))
graph2.AgregarArista(('B','A'))
graph2.AgregarArista(('B','C'))
graph2.AgregarArista(('B','D'))
graph2.AgregarArista(('B','E'))
graph2.AgregarArista(('C','A'))
graph2.AgregarArista(('C','B'))
graph2.AgregarArista(('C','E'))
graph2.AgregarArista(('C','D'))
graph2.AgregarArista(('D','A'))
graph2.AgregarArista(('D','B'))
graph2.AgregarArista(('D','C'))
graph2.AgregarArista(('D','E'))
graph2.AgregarArista(('E','A'))
graph2.AgregarArista(('E','B'))
graph2.AgregarArista(('E','C'))
graph2.AgregarArista(('E','D'))
print('grafo dirigido')
print(graph2.dic)
recomendacion = [('E','C'),('B','A')]
print('\n')
print('orden topologico')
print(lib.orden_topologico(graph2,recomendacion))